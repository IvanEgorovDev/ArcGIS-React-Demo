import{cP as s,cQ as n,a5 as d,r as u,v as l}from"./index-S9cgEMoY.js";import{d as g}from"./FeatureLayerView2D-Dp1-qwq6.js";import"./Container-2nyQ8p1p.js";import"./featureConversionUtils-DjyH0Ug_.js";import"./OptimizedFeature-uF1jWdlD.js";import"./memoryEstimations-CtqgxgT7.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CFwbKe3C.js";import"./AttributeBinsFeatureSet-BKM0YLxf.js";import"./AttributeBinsQuery-DENm1-ep.js";import"./queryUtils-DPNd8wnh.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-WnRni5b7.js";import"./LayerView-BNIeBGp7.js";import"./layerViewUtils-BeF7z2YB.js";import"./TechniqueInstance-Ds3eYtmI.js";import"./UpdateTracking2D-DKjVPc9C.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-BraZsYR2.js";import"./rasterizingUtils-BMDZtEbc.js";import"./floatRGBA-CTjt951x.js";import"./Rect-CUzevAry.js";import"./Utils-B-F5KnxL.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CmLa3V8y.js";import"./VertexArrayObject-QiR7wDzx.js";import"./TileContainer-DvLwat-d.js";import"./WGLContainer-iImGhXzk.js";import"./ProgramTemplate-c-tLS-aZ.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DzHXnfBw.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-CAANrxtb.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DC7jfqdG.js";import"./ShaderBuilder-BWickSZ4.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Ce3QIj0A.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-w5wARC3G.js";import"./constants-B4mRqufT.js";import"./parquet-COOzVsAz.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-_WM35zdb.js";import"./RefreshableLayerView-8K6gQ3j0.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};

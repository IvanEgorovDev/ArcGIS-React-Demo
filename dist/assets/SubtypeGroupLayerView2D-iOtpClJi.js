import{cP as s,cQ as n,a5 as d,r as u,v as l}from"./index-BlXvYXyk.js";import{d as g}from"./FeatureLayerView2D-C5tAUyco.js";import"./Container-Bxl91GCc.js";import"./featureConversionUtils-CTcfZx4t.js";import"./OptimizedFeature-DC9Y-7Lf.js";import"./memoryEstimations-BaCoozKz.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-D2HSNaYW.js";import"./AttributeBinsFeatureSet-VMqFaic5.js";import"./AttributeBinsQuery--TEcmeSo.js";import"./queryUtils-Cfo4uv0j.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CYGiRFXe.js";import"./LayerView-DP2tEBkA.js";import"./layerViewUtils-kWO0DeVn.js";import"./TechniqueInstance-Cqn2XToT.js";import"./UpdateTracking2D-Pu7CLTTH.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-3keVzp9f.js";import"./rasterizingUtils-DF_m_Mny.js";import"./floatRGBA-BBKrSB6M.js";import"./Rect-CUzevAry.js";import"./Utils-CS5qf6ec.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-C9hNzl_h.js";import"./VertexArrayObject-CscjxoEh.js";import"./TileContainer-CtRT7QEw.js";import"./WGLContainer-DImu5g4o.js";import"./ProgramTemplate-BMKJ5eWv.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CT9oWoS1.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-fgoNRNm8.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-C9mhbENy.js";import"./ShaderBuilder-JXgpfWnR.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CVZb1A4y.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-AsRyy8pY.js";import"./constants-B4mRqufT.js";import"./parquet-DGYM-dLY.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-Cl1F2dn3.js";import"./RefreshableLayerView-DO5nRwQs.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};

import{H as w,J as y,K as I,M as T,N as V,O as H,Q as g,R as v,T as C,U as n,V as f,W as U,y as q,r as c,p as d,v as S}from"./index-S9cgEMoY.js";import"./colorUtils-BDYcIehK.js";import"./floatRGBA-CTjt951x.js";import"./UpdateTracking2D-DKjVPc9C.js";import"./GeometryUtils-BraZsYR2.js";import"./OverrideHelper-B4PlTE5d.js";import"./Container-2nyQ8p1p.js";import"./WGLContainer-iImGhXzk.js";import"./Utils-B-F5KnxL.js";import"./StyleDefinition-DzHXnfBw.js";import"./enums-BRzLM11V.js";import"./GridShader-BavNrXCe.js";import"./pbf-DxKlNEin.js";import"./TechniqueType-uMFRS8dR.js";import"./FramebufferObject-CmLa3V8y.js";import"./FeatureCommandQueue-CAANrxtb.js";import"./PieChartMeshWriter-CMLJ1L1c.js";import"./renderState-Bll991xw.js";import"./glsl-BH37Aalp.js";import"./testSVGPremultipliedAlpha-D_Xo0ANP.js";import{A as Q}from"./GraphicsView2D-BafKyiXG.js";import"./earcut-D9gy186-.js";import"./vec3f32-nZdmKIgz.js";import{r as b,o,n as _}from"./imageUtils-CcbMKypx.js";import{S as $,y as G}from"./LayerView-BNIeBGp7.js";import{h as P}from"./HighlightGraphicContainer-C4mCtc6N.js";import{i as L}from"./RefreshableLayerView-8K6gQ3j0.js";import{P as k,S as F}from"./MapServiceLayerViewHelper-tBSyfK2p.js";import{r as W}from"./drapedUtils-yGN0HNZD.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-uF1jWdlD.js";import"./memoryEstimations-CtqgxgT7.js";import"./rasterizingUtils-BMDZtEbc.js";import"./Rect-CUzevAry.js";import"./quantizationUtils-wGzwfnNf.js";import"./ProgramTemplate-c-tLS-aZ.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexArrayObject-QiR7wDzx.js";import"./config-BOD8--da.js";import"./featureConversionUtils-DjyH0Ug_.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./GraphShaderModule-DC7jfqdG.js";import"./ShaderBuilder-BWickSZ4.js";import"./BindType-BBwFZqyN.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-B8BgDO4Q.js";import"./queryUtils-DPNd8wnh.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DKn6Jhug.js";import"./TimeOnly-COW_9KyX.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Ce3QIj0A.js";import"./TurboLine-DLbpJwEs.js";import"./utils-CAmWoVRJ.js";import"./basicInterfaces-CZwQPxTp.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B6QC0aOx.js";import"./dehydratedFeatures-Da9X2xA1.js";import"./BitmapTechnique-BCY3uu8s.js";import"./TileContainer-DvLwat-d.js";import"./layerViewUtils-BeF7z2YB.js";import"./AGraphicContainer-Vx9dw3nV.js";import"./TechniqueInstance-Ds3eYtmI.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-CSej9dhO.js";import"./popupUtils-_WM35zdb.js";const z=[0,0];let l=class extends L(b($(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new Q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>W(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{e.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=H(t);if(e.length===0)return g();const h=(i==null?void 0:i.name)??v;return this._addHighlightGraphics(e,h),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,h))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return C((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(z,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),p=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,p,a,t)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new f(0,0,0,0);let a,p=null;try{if(p=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await U(i),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){r.set(u);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){n(i)||q.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([S("esri.views.2d.layers.TileLayerView2D")],l);const Xt=l;export{Xt as default};

import{bs as z,bt as O,b6 as C,dP as R,b$ as A,Z as G,dQ as S,dR as v,dS as Y,s as E,dT as D}from"./index-BlXvYXyk.js";import{j as P}from"./quantizationUtils-UqvbK5NA.js";import{$ as V}from"./utils-DhgA83IA.js";import{m as j,B as L}from"./utils-ChhYYalr.js";let c=null;const Z=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function _(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=R(n)?A(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(a=>{const l=new G(a.geometry);return P(t,l,l),a.geometry=r?_(l,s??0,i[0]):l,a})}function ee(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(D(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const I=S(n);for(const{geometry:p,attributes:F}of e){const{x:$,y:f}=p,g=Math.max(0,$-t),N=Math.max(0,f-t),M=Math.min(r,f+t),b=Math.min(i,$+t),h=+I(F);for(let m=N;m<M;m++)for(let d=g;d<b;d++){const w=m*i+d,x=Y(d-$,m-f,t)*h,u=s[w]+=x;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function k(e){const t=Z.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:a,fieldInfos:l,timeZone:I}=e,p=i&&(l==null?void 0:l.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&z(p),$=!!p&&V(p),f=e.valueExpression,g=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,b=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await O();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const w=e.fieldInfos,x=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&w?{fields:w}:null;return t.forEach(u=>{const y=u.attributes;let o;if(f){const T=x?{...u,layer:x}:u,U=c.createExecContext(T,d,I);o=c.executeFunction(m,U)}else y&&(o=y[i],r?(o=`${j(o)}${a}${j(y[r])}`,s&&(o=`${o}${a}${j(y[s])}`)):typeof o=="string"&&n&&($?o=o?new Date(o).getTime():null:F&&(o=o?k(o):null)));if(g&&typeof o=="number"&&isFinite(o)){const T=y&&parseFloat(y[N]);o=L(o,g,T,M)}b.push(o)}),b}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?q(i,r):i||r,s?"("+s+")":""}function q(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function oe(e,t,n){const i=B({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Q({layer:e,fields:t});return r.length?new E(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function B(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Q(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,k as I,re as M,ie as N,oe as T,q as U,te as b,ee as w,X as x};
